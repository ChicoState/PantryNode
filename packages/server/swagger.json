{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Pantry API"
  },
  "basePath": "",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "logout",
      "in": "header",
      "description": "JWT authorization token in the format 'Bearer {token}'"
    }
  },
  "paths": {
    "/user/login": {
      "post": {
        "summary": "Logs in a user",
        "description": "Logs in a user by email and password",
        "tags": ["Login"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User email and password",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Login successful"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid email or password"
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user with the provided credentials",
        "tags": ["Register"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user's registration information",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                }
              },
              "required": ["name", "email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "User with this email already exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": ["logout"],
        "summary": "Log out the authenticated user",
        "description": "Destroys the token associated with the authenticated user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sale/category": {
      "get": {
        "tags": ["Category"],
        "summary": "Get all categories",
        "description": "Returns all categories in the database",
        "security": [
          {
            "passport-jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CategoriesResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "security": [{ "BearerAuth": [] }],
        "tags": ["Category"],
        "summary": "Create a new category",
        "description": "Creates a new category with the provided name.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Category object containing the name.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully.",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "401": {
            "description": "Unauthorized request."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/sale/donor": {
      "post": {
        "tags": ["Donor"],
        "summary": "Create a new donor",
        "description": "Creates a new donor in the database",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Donor object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DonorInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Donor created successfully",
            "schema": {
              "$ref": "#/definitions/Donor"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Donor"],
        "summary": "Get all donors",
        "description": "Returns all donors in the database",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DonorsResponse"
            }
          },
          "404": {
            "description": "No donors found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/stock": {
      "get": {
        "tags": ["Stock"],
        "summary": "Get all stock items",
        "description": "Returns all stock items in the database",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/StockResponse"
            }
          },
          "404": {
            "description": "No Stock found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sale/checkout": {
      "get": {
        "tags": ["Checkout"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all purchased items",
        "responses": {
          "200": {
            "description": "Returns an array of purchased items",
            "schema": {
              "type": "object",
              "properties": {
                "purchased": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Checkout"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "CategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          }
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "Donor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DonorInput": {
      "type": "object",
      "required": ["name", "email", "location", "phone", "type"],
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "DonorsResponse": {
      "type": "object",
      "properties": {
        "donors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Donor"
          }
        }
      }
    },
    "StockResponse": {
      "type": "object",
      "properties": {
        "stock": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stock"
          }
        }
      }
    },
    "Stock": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "categoryId": {
          "type": "integer"
        }
      }
    },
    "Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Checkout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "stock": {
          "$ref": "#/definitions/Stock"
        }
      }
    }
  }
}
