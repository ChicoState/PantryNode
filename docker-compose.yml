version: "3.9"

services:
  database:
    image: postgres:latest
    volumes: 
      - ./backend/postgres-data:/var/lib/postgresql/data
      - ./backend/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./backend/sql/dummy_data.sql:/docker-entrypoint-initdb.d/dummy_data.sql
    networks:
      - local
    ports:
      - '5432:${DB_PORT}'
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/pg_data
  db_admin:
    image: dpage/pgadmin4
    ports:
      - "82:80"
    restart: always
    networks:
      - local
    environment:
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN_EMAIL
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_PASSWORD
  server:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: server
    container_name: server
    platform: linux/amd64
    depends_on:
      - database
    environment:
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_HOST=$DB_HOST
      - DB_PORT=$DB_PORT
    restart: always
    networks:
      - local
    command: npm start
    ports:
      - 3001:3001
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: web
    ports:
      - "3000:3000"
    container_name: web
    depends_on:
      - server
    command: npm start
    networks:
      - local
networks:
  local:
